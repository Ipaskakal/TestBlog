@model PostViewModel

    <div class="container">
        <h2 class="text-center">@Model.Title</h2>
        <div class="row  h-100">
            <div class="col h-100">
                <p><markdown>@Model.Text</markdown></p>


                <p>Posted by @Model.Author.UserName</p>
            </div>

            @if (User.IsInRole("Admin") || Model.Author.UserName ==User.Identity.Name)
            {
                <div class="row">
                    <div class="col-md-4">
                        <a href="@Url.Action("Edit", "Post", new { id = Model.Id })">Edit</a>
                    </div>
                    <div class="col-md-4"></div>
                    <div class="col-md-4" style="text-align:right">
                        <a href="@Url.Action("DeletePost", "Post", new { id = Model.Id })">Delete</a>
                    </div>
                </div>
            }

        </div>
        <div class="comments">

            @foreach (var c in Model.DisplayedComments)
            {
                <p>
                    @c.Text ---- @c.Created --- Posted by @c.Author.UserName
                </p>

            @if (User.IsInRole("Admin") || User.Identity.Name == c.Author.UserName)
            {
                <div class="col-md-4"></div>
                <div class="col-md-4" style="text-align:right">
                    <a href="@Url.Action("DeleteComment", "Post", new { id = c.Id, postId = c.PostId, page = Model.PageNum })">Delete</a>
                </div>
            }
            }
        </div>
        @if (User.Identity.IsAuthenticated)
        {
            
                await Html.RenderPartialAsync("Comment", new CommentViewModel { PostId = Model.Id });
           
        }
            else
            {
            <div><a asp-action="Login" asp-controller="Auth">Sign in</a> to comment</div>
            }
    </div>

<div class="row">
    <div class="col-md-6 offset-md-3">
        <ul class="pagination" data-bind="html: pagination">
            <li class="page-item @(Model.PageNum == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Post", "Post", new { id = Model.Id, page = Model.PageNum - 1 })"><</a>
            </li>
            <li class="page-item @(Model.PageNum == 1 ? "active" : "")">
                <a class="page-link" href="@Url.Action("Post", "Post", new {id = Model.Id, page = 1 })">1</a>
            </li>
            @{
                var iMin = 2;
                var iMax = Model.PageCount - 1;
                bool isNotEnd = false;
                const int DIAP = 3;
            }
            @if (Model.PageNum - DIAP > iMin)
            {
                <li class="page-item disabled"><a class="page-link">...</a></li>
                iMin = Model.PageNum - DIAP;
            }
            @if (Model.PageNum + DIAP < iMax)
            {
                isNotEnd = true;
                iMax = Model.PageNum + DIAP;
            }
            @for (int i = iMin; i <= iMax; i++)
            {
                <li class="page-item @(Model.PageNum == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Post", "Post", new {id = Model.Id, page = i })">@i</a>
                </li>
            }
            @if (isNotEnd)
            {
                <li class="page-item disabled"><a class="page-link">...</a></li>
            }
            @if (Model.PageCount > 1)
            {
                <li class="page-item @(Model.PageNum == Model.PageCount ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Post", "Post", new {id = Model.Id, page = Model.PageCount })">@Model.PageCount</a>
                </li>
            }
            <li class="page-item @(Model.PageNum >= Model.PageCount ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Post", "Post", new {id = Model.Id, page = Model.PageNum + 1 })">></a>
            </li>
        </ul>
    </div>
</div>
